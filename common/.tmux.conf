unbind C-b
# Set C-a as default prefix.
set-option -g prefix C-a

#source ~/src/powerline/powerline/bindings/tmux/powerline.conf
set -g status on
set -g status-utf8 on
set -g status-interval 2

set -g status-left "#H "
set -g status-left-bg "white"
set -g status-left-fg "colour16"
set -g status-left-length 20

set -g status-right ""
set -g status-right-length 150

set -g window-status-format "[ #I | #W#F ]"
set -g window-status-bg "colour2"
set -g window-status-fg "colour8"

set -g window-status-current-format "[ #I | #W#F ]"
set -g window-status-current-bg "colour8"
set -g window-status-current-fg "colour2"

# Reload config.
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# C-a C-a for last window.
bind-key C-a last-window
bind-key ` last-window

# Start numbering windows from 1, which is closer to the other numbers.
set -g base-index 1

#set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on
set-option -g status-keys vi
set-option -g set-titles-string "#H:#S.#I.#P #W #T" # window number,program name,active (or not)
set-option -g set-titles off
set-option -sg escape-time 0
set-option -g status on
set-option -g status-interval 1
set-option -g status-utf8 on
set-option -g status-justify left

# vi style movements.
bind h select-pane -L
bind l select-pane -R
bind j select-pane -D
bind k select-pane -U

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

bind c new-window -c ""
bind v split-window -h -c ""
bind s split-window -v -c ""

# bind t choose-tree

setw -g mode-keys vi
setw -g mode-mouse off
setw -g monitor-activity off

bind + resize-pane -D 1
bind - resize-pane -U 1

#unbind [
bind Escape copy-mode
#unbind p
#bind p paste-buffer
bind-key -t vi-copy "v" begin-selection
#bind-key -t vi-copy "y" copy-selectiony\; run-shell "tmux show-buffer | xclip -sel clip -i"\; display-message "Copied to system clipboard"
#bind y run-shell "tmux show-buffer | xclip -sel clip -i"\; display-message "Copied to system clipboard"

bind b split-window "tmux lsw | percol --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux select-window -t"
bind B split-window "tmux ls | percol --initial-index $(tmux ls | awk \"/^$(tmux display-message -p '#{session_name}'):/ {print NR-1}\") | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux switch-client -t"

#bind -n F1 select-window -t 1
#bind -n F2 select-window -t 2
#bind -n F3 select-window -t 3
#bind -n F4 select-window -t 4
#bind -n F5 select-window -t 5
#bind -n F6 select-window -t 6
#bind -n F7 select-window -t 7
#bind -n F8 select-window -t 8
#bind -n F9 select-window -t 9

unbind M-+
bind -n M-+ resize-pane -D 1
bind -n M-- resize-pane -U 1

# move x clipboard into tmux paste buffer
#bind -n C-p run "tmux set-buffer \"`xclip -selection clipboard -o`\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
#bind -n C-y run "tmux show-buffer | xclip -selection clipboard -i"

setw -g aggressive-resize on
setw -g automatic-rename off

setw -g window-status-bell-attr none

setw -g xterm-keys on

# Sane scrolling
set -g terminal-overrides "xterm*:smcup@:rmcup@"

set -g history-limit 10000

#set-option -g default-terminal "screen-16color"
set-option -g default-terminal "screen"

set -g bell-action current
set -g visual-bell off
set -g bell-on-alert off
set -g visual-activity off
set -g visual-content off

# For Vim to know about focus.
set -g focus-events on

# List of plugins
# https://github.com/tmux-plugins/tpm
# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
"
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# initializes TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm

bind-key u capture-pane \;\
  save-buffer /tmp/tmux-buffer \;\
  split-window -l 10 "urlview /tmp/tmux-buffer"
