unbind C-b
# Set C-a as default prefix.
set -g prefix C-a

# tmux 1.8 only
# set -g status-utf8 on
# set -g mouse-resize-pane on
# set -g mouse-select-window on
# set -g mouse-select-pane on
# setw -g mode-mouse off
# set -g visual-content off

set -wg pane-border-status bottom
set -g pane-border-format '[^] #{?pane_active,#[fg=white],#[fg=colour10]}#{pane_current_path} #[default]<< #{pane_current_command}'
set -g pane-border-style 'fg=colour10'
set -g pane-active-border-style 'fg=red'

set -g status-left '#S #{?client_prefix,#[bg=red]*, }'
set -g status-left-style 'bg=white,fg=black'
set -g status-left-length 20

set -g status-right '#H'
set -g status-right-length 150

set -g window-status-format '[ #I | #W #F ]'
set -g window-status-style 'bg=green,fg=black'

set -g window-status-current-format '[ #I | #W #F ]'
set -g window-status-current-style 'bg=black,fg=green'

set -g window-style 'bg=colour0'
set -g window-active-style 'bg=colour8'

# Reload config.
unbind r
bind r source-file ~/.tmux.conf \; display 'Reloaded!'

# Start numbering windows from 1, which is closer to the other numbers.
set -g base-index 1

set -g status-keys vi
set -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
set -g set-titles off
set -g escape-time 0
set -g status on
set -g status-interval 1
set -g status-justify left

# vi style movements.
bind h select-pane -L \; display-pane
bind l select-pane -R \; display-pane
bind j select-pane -D \; display-pane
bind k select-pane -U \; display-pane

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L" \; display-pane
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D" \; display-pane
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U" \; display-pane
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R" \; display-pane
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l" \; display-pane

# C-a C-a for last window.
bind C-a last-window \; display-pane

bind c new-window -c "#{pane_current_path}" \; display-pane
bind v split-window -h -c "#{pane_current_path}" \; display-pane
bind s split-window -v -c "#{pane_current_path}" \; display-pane

bind t choose-tree

setw -g mode-keys vi
setw -g monitor-activity off

set -g mouse on

bind + resize-pane -D 1 \; display-pane
bind - resize-pane -U 1 \; display-pane

#unbind [
bind Escape copy-mode
#unbind p
#bind p paste-buffer
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection
#bind -t vi-copy "y" copy-selectiony\; run-shell "tmux show-buffer | xclip -sel clip -i"\; display-message "Copied to system clipboard"
#bind y run-shell "tmux show-buffer | xclip -sel clip -i"\; display-message "Copied to system clipboard"

#bind -n F1 select-window -t 1
#bind -n F2 select-window -t 2
#bind -n F3 select-window -t 3
#bind -n F4 select-window -t 4
#bind -n F5 select-window -t 5
#bind -n F6 select-window -t 6
#bind -n F7 select-window -t 7
#bind -n F8 select-window -t 8
#bind -n F9 select-window -t 9

unbind M-+
bind -n M-+ resize-pane -D 1
bind -n M-- resize-pane -U 1

# move x clipboard into tmux paste buffer
#bind -n C-p run "tmux set-buffer \"`xclip -selection clipboard -o`\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
#bind -n C-y run "tmux show-buffer | xclip -selection clipboard -i"

setw -g aggressive-resize on
setw -g automatic-rename off

setw -g window-status-bell-attr none

setw -g xterm-keys on

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set -g history-limit 10000

#set -g default-terminal "screen-16color"
set -g default-terminal 'screen'

set -g bell-action current
set -g visual-bell off
set -g visual-activity off

# For Vim to know about focus.
set -g focus-events on

# List of plugins
# https://github.com/tmux-plugins/tpm
# Supports `github_username/repo` or full git URLs
#set -g @tpm_plugins "              \
  #tmux-plugins/tpm                 \
  #tmux-plugins/tmux-resurrect      \
#"
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# initializes TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm

bind u capture-pane \;\
  save-buffer /tmp/tmux-buffer \;\
  split-window -l 10 'urlview /tmp/tmux-buffer'
