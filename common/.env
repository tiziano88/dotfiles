fpath=(/google/src/files/head/depot/google3/devtools/blaze/scripts/zsh_completion $fpath)

#export COLORTERM=gnome-terminal

export EDITOR='vim'
export BROWSER='google-chrome'

#export JAVA_TOOL_OPTIONS="-Xmx2048m -XX:MaxPermSize=256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044"
export JAVA_TOOL_OPTIONS="-Xmx2048m -XX:MaxPermSize=256m"

export PGDATA='/var/lib/pgsql/data'

export GOPATH=~/src/go
export GOROOT=/usr/local/go
export GOBIN=$GOPATH/bin
export PATH=$PATH:$GOBIN
export PATH=~/go_appengine:$PATH
export PATH=/usr/local/share/npm/bin:$PATH

# for bzrlib on OSX
export PYTHONPATH=$PYTHONPATH:usr/local/Cellar/bazaar/2.6.0/lib/python2.7/site-packages

export MAILDIR="~/Maildir/**/INBOX/new"

export DISABLE_AUTO_TITLE=true

function mux {
  case "$1" in
    "")
      # If no args, list all the available "visible" sessions.
      tmux ls | grep --color=never -C0 "^[^.]"
      ;;
    *)
      # "Hidden" sessions have a name starting with a '.'.
      session_id=".$1.`date +%Y%m%d%H%M%S`"
      # Try to create a hidden session and attach it to the specified one, killing it once finished.
      # Failing this, create a new "visible" session with the specified name, and keep it alive.
      (tmux new-session -s "$session_id" -t "$1"; tmux kill-session -t "$session_id") || tmux new-session -s "$1"
      ;;
  esac
}

# Dynamic autocompletion for "visible" session names.
function _mux {
  reply=($(mux | cut -d: -f1))
}
compctl -K _mux mux

# marks
export MARKPATH=$HOME/.marks
function jump {
  cd -P $MARKPATH/$1 2>/dev/null || echo "No such mark: $1"
}
function mark {
  mkdir -p $MARKPATH; ln -s $(pwd) $MARKPATH/$1
}
function unmark {
  rm -i $MARKPATH/$1
}
function marks {
  ls -l $MARKPATH | sed 's/  / /g' | cut -d' ' -f9- | sed 's/ -/\t-/g' && echo
}

function _marks {
  reply=($(ls $MARKPATH))
}
compctl -K _marks jump
compctl -K _marks unmark

#export PATH=$PATH:/usr/local/google/home/tzn/bin

export LESS=FXR

export GPG_TTY=$(tty)
if [ -f "$HOME/.gpg-agent-info" ]; then
  source "$HOME/.gpg-agent-info"
  export GPG_AGENT_INFO
  export SSH_AUTH_SOCK
fi
